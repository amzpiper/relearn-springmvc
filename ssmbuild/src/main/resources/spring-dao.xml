<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <!--1.关联数据库文件-->
    <context:property-placeholder location="classpath:db.properties"/>

    <!--
    2.连接池:
        DriverManagerDataSource
        dbcp 半自动化操作，不自动连接
        c3p0 自动化的加载配置文件，自动设置到对象中！
        druid 很强大,公司用的多
        hikari springboot2.0默认集成
    -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="com.mysql.jdbc.Driver" />
        <property name="jdbcUrl" value="jdbc:mysql://39.106.63.189:3307/ssmbuild?useSSL=false&amp;useUnicode=true&amp;characterEncoding=utf8" />
        <property name="user" value="root" />
        <property name="password" value="root" />
        <!--c3p0:私有属性-->
        <property name="maxPoolSize" value="30" />
        <property name="minPoolSize" value="10" />
        <!--c3p0:关闭连接后不自动commit-->
        <property name="autoCommitOnClose" value="false" />
        <!--c3p0:获取连接超时时间-->
        <property name="checkoutTimeout" value="10000" />
        <!--c3p0:当前获取连接失败重试次数-->
        <property name="acquireRetryAttempts" value="2" />
    </bean>

    <!--3.整合sqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--绑定连接池-->
        <property name="dataSource" ref="dataSource"/>
        <!--绑定Mybatis配置文件-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
    </bean>

    <!--4.配置dao接口扫描包，动态的把Dao接口注入到Spring容器中.
    以前是写BookMapperImpl extends SqlSessionDaoSupport，使用sqlSessionTemplate。
    现在通过MapperScannerConfigurer动态实现了BookMapperImpl
    -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--注入sqlSessionFactory-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--扫描的包-->
        <property name="basePackage" value="com.kuang.dao"/>
    </bean>
</beans>